@using System.Security.Claims
@model Application.Features.Messages.Queries.GetChatMessages.ChatInfoDto

<div class="chat-input-section p-3 p-lg-4">
    <form id="chatinput-form">
        <input type="hidden" name="SenderId" value="@Model.UserId" />
        <input type="hidden" name="ChatId" value="@Model.ChatId" />
        <div class="row g-0 align-items-center">
            <div class="col-auto">
                <div class="chat-input-links me-2">
                    <button type="button" class="btn btn-link text-decoration-none emoji-btn" id="emoji-btn">
                        <i class="bx bx-smile align-middle"></i>
                    </button>
                </div>
            </div>

            <div class="col">
                <div class="chat-input-feedback">Please Enter a Message</div>
                <input type="text" class="form-control chat-input bg-light border-light" id="chat-input" name="Content" placeholder="Type your message..." autocomplete="off" />
            </div>

            <div class="col-auto">
                <div class="chat-input-links ms-2">
                    <button type="submit" class="btn btn-primary chat-send waves-effect waves-light shadow">
                        <i class="ri-send-plane-2-fill align-bottom"></i>
                    </button>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="replyCard">
    <div class="card mb-0">
        <div class="card-body py-3">
            <div class="replymessage-block mb-0 d-flex align-items-start">
                <div class="flex-grow-1">
                    <h5 class="conversation-name"></h5>
                    <p class="mb-0"></p>
                </div>
                <div class="flex-shrink-0">
                    <button type="button" id="close_toggle" class="btn btn-sm btn-link mt-n2 me-n3 fs-18 shadow-none">
                        <i class="bx bx-x align-middle"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


@{
    var currentUserId = User?.FindFirst(ClaimTypes.NameIdentifier)?.Value ?? "";
    var isGroup = (bool)ViewBag.IsGroup;
}


<script>
    var form = document.getElementById('chatinput-form');

    var chatId = @Html.Raw(Json.Serialize(Model.ChatId));
    var currentUserId = @Html.Raw(Json.Serialize(currentUserId));
    var isGroup = @Html.Raw(Json.Serialize(isGroup));



    form.addEventListener('submit', async function (e) {
        e.preventDefault();
        var content = document.getElementById('chat-input').value.trim();

       var data = {
            chatId: chatId,
            content: content
        }


        console.log(data);

        let res = await fetch('/Chat/SendMessage', {
            method: 'POST',
            body: JSON.stringify(data),
            headers: {"Content-Type": 'application/json'}
        })

        var message = await res.json();
        console.log(message)


        // appendMessage(message, currentUserId, isGroup);
        document.getElementById('chat-input').value = '';

    });


</script>
